/**
 * Teste para o sistema de avalia√ß√µes simplificado
 * Foco na avalia√ß√£o do produto, n√£o na gest√£o de clientes
 */

const API_BASE = 'http://localhost:5170';

// Fun√ß√£o auxiliar para fazer requisi√ß√µes
async function apiCall(method, endpoint, body = null) {
  const options = {
    method,
    headers: {
      'Content-Type': 'application/json',
    },
  };
  
  if (body) {
    options.body = JSON.stringify(body);
  }
  
  try {
    const response = await fetch(`${API_BASE}${endpoint}`, options);
    const data = await response.json();
    
    console.log(`${method} ${endpoint}:`, {
      status: response.status,
      ok: response.ok,
      data
    });
    
    return { response, data };
  } catch (error) {
    console.error(`Erro em ${method} ${endpoint}:`, error);
    return { error };
  }
}

// Teste do sistema simplificado
async function testSimplifiedReviewSystem() {
  console.log('üåü Testando sistema de avalia√ß√µes simplificado...\n');
  
  // 1. Buscar produtos para usar como refer√™ncia
  console.log('1. Buscando produtos...');
  const { data: products } = await apiCall('GET', '/api/products');
  
  if (!products || products.length === 0) {
    console.error('‚ùå Nenhum produto encontrado. Adicione alguns produtos primeiro.');
    return;
  }
  
  const productId = products[0].id;
  console.log(`‚úÖ Usando produto: ${products[0].name} (ID: ${productId})\n`);
  
  // 2. Criar uma nova avalia√ß√£o com sistema simplificado
  console.log('2. Criando nova avalia√ß√£o (sistema simplificado)...');
  const reviewData = {
    customerName: "Maria Silva",
    customerPhone: "(11) 99999-9999",
    rating: 5,
    comment: 'Adorei este produto! Qualidade excelente e chegou super r√°pido. Sistema focado no produto funcionando perfeitamente!',
    recommendation: 'sim',
    isVerifiedPurchase: false
  };
  
  const { data: newReview } = await apiCall('POST', `/api/products/${productId}/reviews`, reviewData);
  
  if (!newReview) {
    console.error('‚ùå Falha ao criar avalia√ß√£o');
    return;
  }
  
  console.log(`‚úÖ Avalia√ß√£o criada com sucesso! Foco no produto: ‚úì\n`);
  
  // 3. Buscar avalia√ß√µes do produto
  console.log('3. Buscando avalia√ß√µes do produto...');
  await apiCall('GET', `/api/products/${productId}/reviews`);
  console.log('');
  
  // 4. Criar mais uma avalia√ß√£o sem telefone (para testar campo opcional)
  console.log('4. Criando avalia√ß√£o sem telefone (testando campo opcional)...');
  const reviewData2 = {
    customerName: "Jo√£o Pedro",
    rating: 4,
    comment: 'Sistema simplificado funcionando! N√£o precisei criar conta.',
    recommendation: 'sim',
    isVerifiedPurchase: false
  };
  
  await apiCall('POST', `/api/products/${productId}/reviews`, reviewData2);
  console.log('');
  
  // 5. Verificar se as avalia√ß√µes apareceram
  console.log('5. Verificando todas as avalia√ß√µes criadas...');
  await apiCall('GET', `/api/products/${productId}/reviews`);
  console.log('');
  
  console.log('üéâ Teste do sistema simplificado conclu√≠do com sucesso!');
  console.log('‚úÖ Sistema agora foca na avalia√ß√£o do produto, n√£o na gest√£o de clientes');
  console.log('‚úÖ customerName e customerEmail s√£o enviados diretamente');
  console.log('‚úÖ N√£o h√° mais depend√™ncia de customerId obrigat√≥rio');
}

// Executar teste
testSimplifiedReviewSystem().catch(console.error);