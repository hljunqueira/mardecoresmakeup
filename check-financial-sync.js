const checkFinancialSync = async () => {
  const baseUrl = 'http://localhost:5170';
  
  try {
    console.log('üîç Verificando transa√ß√µes financeiras...');
    
    const transactionsResponse = await fetch(`${baseUrl}/api/admin/transactions`);
    const transactions = await transactionsResponse.json();
    
    console.log(`üìä Total de transa√ß√µes: ${transactions.length}`);
    
    // Filtrar transa√ß√µes de credi√°rio
    const creditTransactions = transactions.filter(t => 
      t.metadata && 
      typeof t.metadata === 'object' && 
      t.metadata.source === 'credit_webhook'
    );
    
    console.log(`üí≥ Transa√ß√µes de credi√°rio via webhook: ${creditTransactions.length}`);
    
    if (creditTransactions.length > 0) {
      console.log('\nüìã Detalhes das transa√ß√µes de credi√°rio:');
      creditTransactions.forEach((transaction, index) => {
        console.log(`\n${index + 1}. ID: ${transaction.id}`);
        console.log(`   Valor: R$ ${transaction.amount}`);
        console.log(`   Descri√ß√£o: ${transaction.description}`);
        console.log(`   Categoria: ${transaction.category}`);
        console.log(`   Status: ${transaction.status}`);
        console.log(`   Data: ${transaction.date}`);
        console.log(`   Conta: ${transaction.metadata.accountNumber}`);
        console.log(`   Sincronizado em: ${transaction.metadata.syncedAt}`);
      });
    } else {
      console.log('‚ùå Nenhuma transa√ß√£o de credi√°rio encontrada!');
      console.log('\nüîç Analisando todas as transa√ß√µes para debug:');
      transactions.forEach((transaction, index) => {
        console.log(`${index + 1}. ${transaction.description} - R$ ${transaction.amount} - ${transaction.category}`);
        if (transaction.metadata) {
          console.log(`   Source: ${transaction.metadata.source || 'N/A'}`);
        }
      });
    }
    
    // Verificar status de sincroniza√ß√£o
    console.log('\nüîÑ Verificando status geral de sincroniza√ß√£o...');
    const syncStatusResponse = await fetch(`${baseUrl}/api/admin/financial/sync-status`);
    const syncStatus = await syncStatusResponse.json();
    
    console.log('üìà Status da sincroniza√ß√£o:');
    console.log(`   - Pedidos sincronizados: ${syncStatus.orders?.synced || 0}/${syncStatus.orders?.confirmed || 0}`);
    console.log(`   - Pagamentos de credi√°rio: ${syncStatus.credit?.syncedPayments || 0}`);
    console.log(`   - Transa√ß√µes via webhook: ${syncStatus.transactions?.webhookGenerated || 0}`);
    console.log(`   - Sistema em sincronia: ${syncStatus.syncHealth?.ordersInSync ? '‚úÖ' : '‚ùå'}`);
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar sincroniza√ß√£o:', error.message);
  }
};

// Executar
checkFinancialSync();